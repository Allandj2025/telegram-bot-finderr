const { Client, LocalAuth, MessageMedia } = require('whatsapp-web.js');
const qrcode = require('qrcode-terminal');
const express = require('express');

// Servidor Express para mantener activo
const app = express();
const PORT = process.env.PORT || 3000;

app.get('/', (req, res) => {
    res.send('ü§ñ WhatsApp Bot Finder funcionando correctamente! ‚úÖ');
});

app.listen(PORT, () => {
    console.log(`üåê Servidor corriendo en puerto ${PORT}`);
});

// Crear cliente de WhatsApp
const client = new Client({
    authStrategy: new LocalAuth(),
    puppeteer: {
        headless: true,
        args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-dev-shm-usage',
            '--disable-accelerated-2d-canvas',
            '--no-first-run',
            '--no-zygote',
            '--single-process',
            '--disable-gpu'
        ]
    }
});

// Generar bots de WhatsApp
function generateWhatsAppBots(category, count) {
    const bots = [];
    const keywords = {
        'juegos': ['Game', 'Play', 'Quiz', 'Trivia', 'Fun'],
        'musica': ['Music', 'Song', 'Audio', 'Radio', 'Beat'],
        'entretenimiento': ['Fun', 'Meme', 'Joke', 'Comedy', 'Show'],
        'educacion': ['Learn', 'Study', 'Edu', 'Course', 'Teacher'],
        'productividad': ['Task', 'Work', 'Schedule', 'Note', 'Reminder'],
        'compras': ['Shop', 'Buy', 'Store', 'Market', 'Deal'],
        'noticias': ['News', 'Info', 'Alert', 'Update', 'Report'],
        'fitness': ['Fit', 'Health', 'Gym', 'Workout', 'Diet'],
        'comida': ['Food', 'Recipe', 'Cook', 'Kitchen', 'Chef'],
        'viajes': ['Travel', 'Trip', 'Hotel', 'Flight', 'Tour'],
        'finanzas': ['Money', 'Bank', 'Crypto', 'Investment', 'Finance'],
        'arte': ['Art', 'Design', 'Creative', 'Draw', 'Paint'],
        'deportes': ['Sport', 'Football', 'Soccer', 'Basketball', 'Fitness'],
        'herramientas': ['Tool', 'Utility', 'Convert', 'Calculator', 'Helper'],
        'citas': ['Dating', 'Love', 'Match', 'Romance', 'Meet'],
        'tecnologia': ['Tech', 'Code', 'AI', 'Programming', 'Software'],
        'peliculas': ['Movie', 'Film', 'Cinema', 'Series', 'TV'],
        'libros': ['Book', 'Read', 'Story', 'Novel', 'Library'],
        'idiomas': ['Language', 'Translate', 'English', 'Spanish', 'Learn'],
        'otros': ['General', 'Multi', 'All', 'Various', 'Mixed']
    };
    
    const categoryWords = keywords[category] || ['Bot', 'Helper'];
    
    for (let i = 1; i <= count; i++) {
        const word = categoryWords[Math.floor(Math.random() * categoryWords.length)];
        const number = Math.floor(Math.random() * 9999) + 1;
        
        bots.push({
            name: `${word} Bot ${i}`,
            phone: `+1${Math.floor(Math.random() * 9000000000) + 1000000000}`,
            description: `Bot de ${category} para WhatsApp - ${word} especializado`,
            verified: Math.random() > 0.8,
            rating: (Math.random() * 2 + 3).toFixed(1),
            users: Math.floor(Math.random() * 50000) + 1000,
            category: category
        });
    }
    return bots;
}

// Base de datos de bots de WhatsApp
const whatsappBotCategories = {
    'üéÆ Juegos': generateWhatsAppBots('juegos', 5000),
    'üéµ M√∫sica': generateWhatsAppBots('musica', 5000),
    'üì∫ Entretenimiento': generateWhatsAppBots('entretenimiento', 5000),
    'üìö Educaci√≥n': generateWhatsAppBots('educacion', 5000),
    'üíº Productividad': generateWhatsAppBots('productividad', 5000),
    'üõçÔ∏è Compras': generateWhatsAppBots('compras', 5000),
    'üì∞ Noticias': generateWhatsAppBots('noticias', 5000),
    'üèãÔ∏è Fitness': generateWhatsAppBots('fitness', 5000),
    'üçî Comida': generateWhatsAppBots('comida', 5000),
    '‚úàÔ∏è Viajes': generateWhatsAppBots('viajes', 5000),
    'üí∞ Finanzas': generateWhatsAppBots('finanzas', 5000),
    'üé® Arte': generateWhatsAppBots('arte', 5000),
    '‚öΩ Deportes': generateWhatsAppBots('deportes', 5000),
    'üîß Herramientas': generateWhatsAppBots('herramientas', 5000),
    '‚ù§Ô∏è Citas': generateWhatsAppBots('citas', 5000),
    'üì± Tecnolog√≠a': generateWhatsAppBots('tecnologia', 5000),
    'üé¨ Pel√≠culas': generateWhatsAppBots('peliculas', 5000),
    'üìñ Libros': generateWhatsAppBots('libros', 5000),
    'üåç Idiomas': generateWhatsAppBots('idiomas', 5000),
    'üéØ Otros': generateWhatsAppBots('otros', 5000)
};

// Mensaje de bienvenida
const welcomeMessage = `
ü§ñ *¬°Bienvenido al WhatsApp Bot Finder!* üîç

üåü *¬øQu√© puedo hacer por ti?*
‚Ä¢ Buscar bots de WhatsApp por categor√≠as
‚Ä¢ Encontrar bots verificados y populares
‚Ä¢ Descubrir nuevos bots √∫tiles
‚Ä¢ Obtener informaci√≥n detallada de cada bot

üìã *Comandos disponibles:*
üéÆ *juegos* - Bots de juegos
üéµ *musica* - Bots de m√∫sica
üì∫ *entretenimiento* - Bots divertidos
üìö *educacion* - Bots educativos
üíº *productividad* - Bots de trabajo
üõçÔ∏è *compras* - Bots de compras
üì∞ *noticias* - Bots de noticias
üèãÔ∏è *fitness* - Bots de salud
üçî *comida* - Bots de comida
‚úàÔ∏è *viajes* - Bots de viajes
üí∞ *finanzas* - Bots de finanzas
üé® *arte* - Bots de arte
‚öΩ *deportes* - Bots deportivos
üîß *herramientas* - Bots de utilidades
‚ù§Ô∏è *citas* - Bots de citas
üì± *tecnologia* - Bots de tecnolog√≠a
üé¨ *peliculas* - Bots de pel√≠culas
üìñ *libros* - Bots de libros
üåç *idiomas* - Bots de idiomas
üéØ *otros* - Otros bots

üîç *buscar [t√©rmino]* - Buscar bots espec√≠ficos
üìä *stats* - Estad√≠sticas del bot
‚ÑπÔ∏è *ayuda* - Mostrar esta ayuda
üìã *menu* - Ver men√∫ principal

üí° *Tip:* ¬°Cada categor√≠a contiene 5000 bots!

¬°Escribe cualquier comando para empezar! üöÄ
`;

// Men√∫ principal con botones
const mainMenu = `
ü§ñ *MEN√ö PRINCIPAL - BOT FINDER*

Selecciona una categor√≠a escribiendo su nombre:

üéÆ *juegos* | üéµ *musica* | üì∫ *entretenimiento*
üìö *educacion* | üíº *productividad* | üõçÔ∏è *compras*
üì∞ *noticias* | üèãÔ∏è *fitness* | üçî *comida*
‚úàÔ∏è *viajes* | üí∞ *finanzas* | üé® *arte*
‚öΩ *deportes* | üîß *herramientas* | ‚ù§Ô∏è *citas*
üì± *tecnologia* | üé¨ *peliculas* | üìñ *libros*
üåç *idiomas* | üéØ *otros*

*Comandos especiales:*
üîç *buscar [t√©rmino]* - Buscar bots
üìä *stats* - Ver estad√≠sticas
‚ÑπÔ∏è *ayuda* - Ver ayuda completa
`;

// Eventos del cliente
client.on('qr', (qr) => {
    console.log('üì± Escanea este c√≥digo QR con WhatsApp:');
    qrcode.generate(qr, {small: true});
});

client.on('ready', () => {
    console.log('‚úÖ WhatsApp Bot Finder est√° listo!');
    console.log('ü§ñ Bot conectado correctamente');
    console.log(`üìä Base de datos cargada con ${Object.values(whatsappBotCategories).reduce((sum, bots) => sum + bots.length, 0).toLocaleString()} bots`);
});

client.on('authenticated', () => {
    console.log('üîê Cliente autenticado correctamente');
});

client.on('auth_failure', (msg) => {
    console.error('‚ùå Error de autenticaci√≥n:', msg);
});

client.on('disconnected', (reason) => {
    console.log('üì± Cliente desconectado:', reason);
});

// Manejador de mensajes
client.on('message', async (message) => {
    const chat = await message.getChat();
    const contact = await message.getContact();
    const messageBody = message.body.toLowerCase().trim();
    
    console.log(`üì© Mensaje de ${contact.name || contact.pushname}: ${message.body}`);
    
    // Comando de inicio/ayuda
    if (messageBody === 'hola' || messageBody === 'start' || messageBody === 'inicio' || messageBody === 'ayuda') {
        await message.reply(welcomeMessage);
        return;
    }
    
    // Comando de men√∫
    if (messageBody === 'menu' || messageBody === 'men√∫') {
        await message.reply(mainMenu);
        return;
    }
    
    // Comando de estad√≠sticas
    if (messageBody === 'stats' || messageBody === 'estadisticas') {
        const totalBots = Object.values(whatsappBotCategories).reduce((sum, bots) => sum + bots.length, 0);
        const categories = Object.keys(whatsappBotCategories).length;
        
        const statsMessage = `
üìä *ESTAD√çSTICAS DEL BOT FINDER*

ü§ñ *Total de bots:* ${totalBots.toLocaleString()}
üìÅ *Categor√≠as disponibles:* ${categories}
üéØ *Bots por categor√≠a:* 5,000
‚úÖ *Estado:* Activo y funcionando
üîÑ *√öltima actualizaci√≥n:* ${new Date().toLocaleDateString('es-ES')}
üë• *Usuarios activos:* ${Math.floor(Math.random() * 10000) + 1000}

¬°Gracias por usar Bot Finder! üöÄ
        `;
        
        await message.reply(statsMessage);
        return;
    }
    
    // Comando de b√∫squeda
    if (messageBody.startsWith('buscar ')) {
        const searchTerm = messageBody.replace('buscar ', '').trim();
        
        if (!searchTerm) {
            await message.reply('‚ùå Por favor especifica un t√©rmino de b√∫squeda.\nEjemplo: *buscar m√∫sica*');
            return;
        }
        
        const results = [];
        Object.keys(whatsappBotCategories).forEach(category => {
            const categoryBots = whatsappBotCategories[category].filter(bot => 
                bot.name.toLowerCase().includes(searchTerm) ||
                bot.description.toLowerCase().includes(searchTerm) ||
                bot.category.toLowerCase().includes(searchTerm)
            );
            results.push(...categoryBots.slice(0, 20));
        });
        
        if (results.length === 0) {
            await message.reply(`‚ùå No se encontraron bots con el t√©rmino "*${searchTerm}*"\n\nüí° Intenta con: juegos, m√∫sica, noticias, etc.`);
            return;
        }
        
        const searchResults = formatBotList(results.slice(0, 15));
        await message.reply(`üîç *Resultados para "${searchTerm}":*\n\n${searchResults}\n\nüí° Mostrando ${Math.min(results.length, 15)} de ${results.length} resultados`);
        return;
    }
    
    // Comandos de categor√≠as
    const categoryCommands = {
        'juegos': 'üéÆ Juegos',
        'musica': 'üéµ M√∫sica',
        'm√∫sica': 'üéµ M√∫sica',
        'entretenimiento': 'üì∫ Entretenimiento',
        'educacion': 'üìö Educaci√≥n',
        'educaci√≥n': 'üìö Educaci√≥n',
        'productividad': 'üíº Productividad',
        'compras': 'üõçÔ∏è Compras',
        'noticias': 'üì∞ Noticias',
        'fitness': 'üèãÔ∏è Fitness',
        'comida': 'üçî Comida',
        'viajes': '‚úàÔ∏è Viajes',
        'finanzas': 'üí∞ Finanzas',
        'arte': 'üé® Arte',
        'deportes': '‚öΩ Deportes',
        'herramientas': 'üîß Herramientas',
        'citas': '‚ù§Ô∏è Citas',
        'tecnologia': 'üì± Tecnolog√≠a',
        'tecnolog√≠a': 'üì± Tecnolog√≠a',
        'peliculas': 'üé¨ Pel√≠culas',
        'pel√≠culas': 'üé¨ Pel√≠culas',
        'libros': 'üìñ Libros',
        'idiomas': 'üåç Idiomas',
        'otros': 'üéØ Otros'
    };
    
    if (categoryCommands[messageBody]) {
        const category = categoryCommands[messageBody];
        const bots = whatsappBotCategories[category];
        
        if (bots && bots.length > 0) {
            const categoryBots = formatBotList(bots.slice(0, 10));
            await message.reply(`${category} *(${bots.length.toLocaleString()} bots disponibles)*\n\n${categoryBots}\n\nüí° Mostrando 10 de ${bots.length.toLocaleString()} bots\nüìù Escribe *buscar ${messageBody}* para ver m√°s`);
        }
        return;
    }
    
    // Respuesta por defecto
    if (message.body.length > 0 && !message.body.startsWith('/')) {
        await message.reply(`ü§ñ No entend√≠ ese comando.\n\nEscribe *ayuda* para ver todos los comandos disponibles o *menu* para ver el men√∫ principal.`);
    }
});

// Funci√≥n para formatear lista de bots
function formatBotList(bots) {
    return bots.map((bot, index) => {
        const verifiedIcon = bot.verified ? '‚úÖ' : '';
        const stars = '‚≠ê'.repeat(Math.floor(bot.rating));
        return `${index + 1}. *${bot.name}* ${verifiedIcon}\n   üìû ${bot.phone}\n   üìù ${bot.description}\n   ${stars} ${bot.rating} | üë• ${bot.users.toLocaleString()} usuarios\n`;
    }).join('\n');
}

// Manejo de errores
client.on('error', (error) => {
    console.error('‚ùå Error del cliente:', error);
});

process.on('unhandledRejection', (reason, promise) => {
    console.error('‚ùå Unhandled Rejection at:', promise, 'reason:', reason);
});

process.on('uncaughtException', (error) => {
    console.error('‚ùå Uncaught Exception:', error);
    process.exit(1);
});

// Inicializar cliente
console.log('üöÄ Iniciando WhatsApp Bot Finder...');
client.initialize();